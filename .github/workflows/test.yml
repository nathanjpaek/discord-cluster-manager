name: stanfordjob
on:
  workflow_dispatch:
    inputs:
      run_id:
        description: 'Unique identifier for this run'
        required: true
        type: string
      payload:
        description: 'Content of the user submission, as json string'
        required: true
        type: string
      runner:
        description: 'AMD runner to run workflow on'
        required: true
        default: "gpumode-nvidia-arc"
        type: string
      requirements:
        description: 'Contents for a requirements.txt file'
        required: false
        type: string

run-name: 'Stanford Job - ${{ github.event.inputs.run_id }}'

jobs:
  run:
    runs-on: self-hosted
    strategy:
      fail-fast: false
    timeout-minutes: 20
    steps:
    - uses: actions/checkout@v3
    - name: Create input files
      shell: bash
      run: |
        # Extract the payload content without printing it
        PAYLOAD=$(jq -r '.inputs.payload' $GITHUB_EVENT_PATH)

        # Apply mask to the extracted content
        echo "::add-mask::$PAYLOAD"

        # Now write to file (won't be logged since it's masked)
        echo "$PAYLOAD" > payload.json

    - name: Setup Virtual Environment and Install Dependencies
      shell: bash
      run: |
        pip install --upgrade pip
        if [[ -n "${{ github.event.inputs.requirements }}" ]]; then
          cat > "requirements.txt" <<'EOL'
          ${{ github.event.inputs.requirements }}
        EOL
        pip install -r "requirements.txt"
        fi
        pip install -e .

    - name: Run script
      shell: bash
      run: |
        python3 src/runners/github-runner.py

    - name: Upload training artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: run-result
        path: result.json

    - name: Upload profiling artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: profile-data
        path: profile_data/*
        retention-days: 1
